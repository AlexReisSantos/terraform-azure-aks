# Starter pipeline azure
trigger:
  - test/* # Generates an alpha codename version (because it's very imbryonic)
  - develop # Generates a beta codename (closer to release)
  - master # Official release
  - hotfix/* # Official release
  
variables:
  - group: release-note-auth
  - group: terraform-ci

resources:
  repositories:
    - repository: templates
      type: git
      name: azure-pipeline-templates

stages:

  - template: stages/bootstrap.yml@templates

  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: ubuntu-latest

        steps:

        - task: GoTool@0
          displayName: 'go install'
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          inputs:
            version: '1.13.5'

        - task: Bash@3
          displayName: 'go bootstrap'
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          inputs:
            workingDirectory: 'test'
            targetType: inline
            script: |
              go version
              go get -v -t -d ./... 
              if [ -f Gopkg.toml ]; then
                  curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                  dep ensure
              fi

        - task: Bash@3
          displayName: 'go test'
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          inputs:
            workingDirectory: 'test'
            targetType: inline
            script: |
              ./gotestsum --format standard-verbose --junitfile report.xml -- -timeout 0
    
        - task: PublishTestResults@2
          displayName: 'Publish result test'
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/report.xml'

        - task: GitHubRelease@0
          displayName: PushRelease
          condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
          inputs:
            gitHubConnection: 'edalferes-access-token'
            repositoryName: $(Build.Repository.Name)
            title: $(Build.BuildNumber)
            action: 'create'
            tagSource: manual
            tag: $(Build.BuildNumber)
            addChangeLog: true
            assets: |
              $(Build.ArtifactStagingDirectory)/README.md
              $(Build.ArtifactStagingDirectory)/CHANGELOG.md
                  